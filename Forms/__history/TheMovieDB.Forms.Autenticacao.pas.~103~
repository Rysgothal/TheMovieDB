unit TheMovieDB.Forms.Autenticacao;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.VirtualImage, Vcl.BaseImageCollection, Vcl.ImageCollection, Vcl.StdCtrls,
  Vcl.Mask, Vcl.ExtCtrls, Vcl.ComCtrls, Data.DB, IBX.IBDatabase,
  TheMovieDB.Helpers.Componentes;

type
  TfrmAutenticacao = class(TForm)
    ImageCollection1: TImageCollection;
    gbxLogin: TGroupBox;
    btnSair: TButton;
    btnLogin: TButton;
    lblEntrarComoConvidado: TLabel;
    edtNome: TLabeledEdit;
    edtSenha: TLabeledEdit;
    pnlLogo: TPanel;
    VirtualImage1: TVirtualImage;
    VirtualImage2: TVirtualImage;
    Bevel1: TBevel;
    cbxLembrar: TCheckBox;
    procedure lblEntrarComoConvidadoClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure btnSairClick(Sender: TObject);
    procedure btnLoginClick(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    { Private declarations }
    procedure CriarSessaoConvidado;
    procedure IniciarConexaoAPI;
    procedure IniciarConexaoBanco;
    procedure Entrar;

  public
    { Public declarations }
  end;

var
  frmAutenticacao: TfrmAutenticacao;

implementation

uses
  TheMovieDB.Classes.TheMovieDBApi, TheMovieDB.Forms.Principal, System.UITypes,
  TheMovieDB.Classes.Exceptions, TheMovieDB.Classes.Banco;

{$R *.dfm}

procedure TfrmAutenticacao.btnLoginClick(Sender: TObject);
begin
  Entrar;
end;

procedure TfrmAutenticacao.btnSairClick(Sender: TObject);
begin
  frmAutenticacao.ModalResult := mrCancel;
  Close;
end;

procedure TfrmAutenticacao.CriarSessaoConvidado;
var
  lApi: TTheMovieDBApi;
begin
  lApi := TTheMovieDBApi.ObterInstancia;
  lApi.CriarSessaoConvidado;
  frmAutenticacao.ModalResult := mrOk;
end;

procedure TfrmAutenticacao.FormClose(Sender: TObject; var Action: TCloseAction);
begin
//  if MessageDlg('A aplicação será encerrada, quer mesmo sair?', mtInformation, [mbNo, mbYes], 0) = ID_NO then
//  begin
//    Exit;
//  end;
end;

procedure TfrmAutenticacao.FormCreate(Sender: TObject);
begin
  IniciarConexaoAPI;
  IniciarConexaoBanco;
  edtNome.Focar;
end;

procedure TfrmAutenticacao.FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
  if Key = VK_RETURN then
  begin
    Perform(WM_NEXTDLGCTL,0,0);
  end;

  if Key = VK_ESCAPE then
  begin
    Close;
  end;
end;

procedure TfrmAutenticacao.IniciarConexaoAPI;
var
  lApi: TTheMovieDBApi;
begin
  try
    lApi := TTheMovieDBApi.ObterInstancia;

    if not lApi.ChaveValida then
    begin
      Application.MessageBox('A chave da API TheMovieDB está inválida, verifique.', 'Chave Inválida');
      Application.Terminate;
    end;
  except
    on E: ETokenInvalido do
    begin
      Application.MessageBox(PChar(E.Message), 'Token Inválido');
      Close;
    end;

    on E: Exception do
    begin
      Application.MessageBox(PChar(E.Message), 'Inconsistência Desconhecida');
      Close;
    end;
  end;
end;

procedure TfrmAutenticacao.IniciarConexaoBanco;
var
  lDados: TDados;
begin
  try
    lDados := TDados.ObterInstancia;
    lDados.TestarConexao;
  except
    on E: Exception do
    begin
      Application.MessageBox(PChar(E.Message), 'Inconsistência Desconhecida');
      Close;
    end;
  end;
end;

procedure TfrmAutenticacao.lblEntrarComoConvidadoClick(Sender: TObject);
begin
  CriarSessaoConvidado;
end;

procedure TfrmAutenticacao.Entrar;
var
  lDados: TDados;
begin
  lDados := TDados.ObterInstancia;

  try
    if edtNome.IsEmpty then
    begin
      Application.MessageBox('Informe o usuário para o acesso ao sistema', 'Atenção', MB_OK + MB_ICONINFORMATION);
      edtNome.Focar;
      Exit;
    end;

    if edtSenha.IsEmpty then
    begin
      Application.MessageBox('O campo da senha está vazio, verifique!', 'Atenção', MB_OK + MB_ICONINFORMATION);
      edtSenha.Focar;
      Exit;
    end;

    lDados.FazerLogin(edtNome.Text, edtSenha.Text);
    frmAutenticacao.ModalResult := mrOk;
  except
    on E: ESenhaIncorreta do
    begin
      Application.MessageBox(PChar(E.Message), 'Atenção', MB_OK + MB_ICONINFORMATION);
      edtSenha.Focar;
    end;

    on E: Exception do
    begin
      Application.MessageBox(PChar(E.Message), 'Atenção', MB_OK + MB_ICONINFORMATION);
      edtNome.Focar;
    end;
  end;
end;

end.
